version: '3.8'

services:
  .app-base: &app-base
    image: nercari_app
    command: [ 'echo', 'build completed' ]
    environment:
      RAILS_ENV: development
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASS: password
      REDIS_URL: redis://redis:6379
    # links:
    #   - db
    #   - redis
    volumes:
      # カレントディレクトリをバインドする
      - .:/app:cached
      # bundle-data volumeを作成しdockerのroot bundle dirへマウントしている。
      - bundle-data:/usr/local/bundle
      - node-data:/app/node_modules
      # /etc/group & passwdをdockerから書き換えないためにreadonly
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true

  app:
    <<: *app-base
    user: "${UID}:${GID}"
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - 3000:3000
    build:
      context: .
      dockerfile: docker/local.Dockerfile

  # worker:
  #   <<: *app-base
  #   command:
  #     [
  #       'bundle',
  #       'exec',
  #       'sidekiq',
  #       '-C',
  #       'config/sidekiq.yml'
  #     ]

  redis:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  # TODO portとdbevarから繋げるようにする。
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    # 指定しておくとコンテナ停止時にサービスが再起動してくれる。
    # restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  # TODO 以下の記入について調べる（おそらく作成するだけでいい場合の最低構文）
  bundle-data: {}
  node-data: {}
  redis-data: {}
  db-data: {}
